plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'maven-publish'
}

group = 'com.etendorx'
version = "$gradle.ext.version"
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

publishing {
    publications {
        bootJava(MavenPublication) {
            groupId = group
            artifactId = 'asyncprocess'
            version = version
            artifact tasks.named("bootJar")
        }
    }
    repositories {
        maven {
            url "${repositoryUrl}"
            credentials {
                username = "${repositoryUser}"
                password = "${repositoryPassword}"
            }
        }
    }
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.apache.kafka:kafka-streams'
    implementation "io.projectreactor.kafka:reactor-kafka"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.apache.kafka:kafka-streams-test-utils'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    //
    implementation project(':com.etendorx.lib.kafka')
    implementation(project(':com.etendorx.utils.auth')) {
        exclude group: 'org.slf4j', module: '*'
    }
    implementation project(':com.etendorx.lib.asyncprocess')
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

}

bootBuildImage {
    imageName = "${asyncPushImage}"
    publish = true
    docker {
        publishRegistry {
            url = "${pushUrl}"
            username = "${pushUsername}"
            password = "${pushPassword}"
        }
    }
}

ext {
    set('springCloudVersion', "2021.0.2")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

springBoot {
    buildInfo()
}

test.onlyIf {
    // TODO: Test execution needs to be parametrized
    false
}
