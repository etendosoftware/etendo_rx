plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'java'
}

group = 'com.etendorx.auth'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation (project(':com.etendorx.utils.auth')) {
		exclude group: 'org.slf4j', module: '*'
	}
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	implementation 'io.github.openfeign:feign-okhttp'
	implementation 'io.github.openfeign:feign-jackson:11.8'

	// Test
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation "com.github.tomakehurst:wiremock-jre8:2.33.1"
}

ext {
	set('springCloudVersion', "2021.0.2")
}

/**
 * To debug run with --debug-jvm -PdebugPort=<port>
 * ./gradlew com.etendorx.auth:bootRun --info --debug-jvm -PdebugPort=9994
 */
bootRun {
	debugOptions{
		port = Integer.valueOf((findProperty('debugPort') ?: port.get()) as String)
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootBuildImage {
	imageName = "${authPushImage}"
	publish = true
	docker {
		publishRegistry {
			url = "${pushUrl}"
			username = "${pushUsername}"
			password = "${pushPassword}"
		}
	}
}

springBoot {
	buildInfo()
}
