import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'org.springframework.boot' apply false
    id 'io.spring.dependency-management'
    id 'java'
    id 'idea'
    id 'maven-publish'
}

group = 'com.etendorx'
version = "$gradle.ext.version"
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
    includeInDasDependencies = true
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation project(path: ':com.etendorx.das_core')
    implementation project(path: ':com.etendorx.entities')

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-rest:2.5.10'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:postgresql:1.17.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.3'
    testImplementation(project(path: ':com.etendorx.das')) {
        transitive = false
        exclude group: 'com.etendorx.test.grpc'
    }
    testImplementation(project(':com.etendorx.utils.auth')) {
        exclude group: 'org.slf4j', module: '*'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

springBoot {
}
