plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
    id("org.springdoc.openapi-gradle-plugin") version "1.7.0"
}

group = 'com.etendorx.entities'
version = "$gradle.ext.version"
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

configurations {
    // Configuration used to store the dependencies that the FAT JAR will contain
    bundle
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.1'
    implementation 'org.springframework:spring-web'
    implementation project(':com.etendorx.das_core')
    bundle(project(':com.etendorx.das_core')) {
        exclude group: '*', module: "*"
    }
    implementation 'com.jayway.jsonpath:json-path:2.8.0'

    if(project.hasProperty('data-rest.enabled') && project.property('data-rest.enabled') == "true") {
        implementation 'org.springframework.data:spring-data-rest-core'
    }

    // openapi
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.2.0'

}

bootJar {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java' // project(':com.etendorx.entities').sourceSets.main.java.srcDirs
            srcDirs 'src/main/entities' // project(':com.etendorx.entities').sourceSets.main.java.srcDirs
            srcDirs 'src/main/jparepo' // project(':com.etendorx.entities').sourceSets.main.java.srcDirs
            srcDirs 'src/main/projections' // project(':com.etendorx.entities').sourceSets.main.java.srcDirs
            srcDirs 'src/main/mappings'
        }
    }
}
