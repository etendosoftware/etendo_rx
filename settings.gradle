pluginManagement {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url 'https://repo.futit.cloud/repository/maven-public-releases'
        }
        maven {
            url 'https://repo.futit.cloud/repository/maven-public-snapshots'
        }
    }
}

rootProject.name = 'etendorx'

def subDirs = new File("modules_core").listFiles(new FileFilter() {
    boolean accept(File file) {
        if (!file.isDirectory()) {
            return false
        }

        return new File(file, 'build.gradle').isFile()
    }
})
println subDirs.toString()
subDirs.each { File dir ->
    include dir.name
    project (":" + dir.name).projectDir = dir
}
subDirs = new File("modules_gen").listFiles(new FileFilter() {
    boolean accept(File file) {
        if (!file.isDirectory()) {
            return false
        }

        return new File(file, 'build.gradle').isFile()
    }
})
println subDirs.toString()
subDirs.each { File dir ->
    include dir.name
    project (":" + dir.name).projectDir = dir
}

subDirs = new File("modules").listFiles(new FileFilter() {
    boolean accept(File file) {
        if (!file.isDirectory()) {
            return false
        }

        return new File(file, 'build.gradle').isFile()
    }
})
println subDirs.toString()
subDirs.each { File dir ->
    include dir.name
    project (":" + dir.name).projectDir = dir
}

subDirs = new File("libs").listFiles(new FileFilter() {
    boolean accept(File file) {
        if (!file.isDirectory()) {
            return false
        }

        return new File(file, 'build.gradle').isFile()
    }
})
println subDirs.toString()
subDirs.each { File dir ->
    include dir.name
    project (":" + dir.name).projectDir = dir
}

