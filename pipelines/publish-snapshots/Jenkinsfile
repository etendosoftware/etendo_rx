pipeline {
  options {
      disableConcurrentBuilds()
  }

  environment {
    CONTEXT_NAME        = "etendo"
    BBDD_SID            = "etendo"
    BBDD_PORT           = "5432"
    BBDD_SYSTEMUSER     = "postgres"
    BBDD_SYSTEMPASS     = "syspass"
    BBDD_USER           = "tad"
    BBDD_PASSWORD       = "tad"
    NEXUS_USER          = credentials('nexus-admin-user')
    NEXUS_PASSWORD      = credentials('nexus-admin-passwd')
    GITHUB_USER         = "etendobot"
    GITHUB_TOKEN        = credentials('github-read-package-token')
    REPOSITORY_URL      = "https://repo.futit.cloud/repository/etendo-snapshot-jars"
    EMAIL_ADDRESS       = credentials('email_builds')
    ETENDO_RX_URL       = "https://github.com/etendosoftware/etendo_rx"
    ETENDO_BASE_URL     = "https://github.com/etendosoftware/etendo_base"
    MODULE_RX_URL       = "git@bitbucket.org:koodu_software/com.etendoerp.etendorx.git"
    COMMIT_AUTHOR_NAME  = sh(returnStdout: true, script: "git log -1 --pretty=format:'%an'").trim()
    COMMIT_AUTHOR_EMAIL = sh(returnStdout: true, script: "git log -1 --pretty=format:'%ae'").trim()
    SUCCESS             = "SUCCESS"
    FAILED              = "FAILED"
    JAVA_HOME           = "/usr/lib/jvm/java-17-openjdk-amd64"
  }

  agent {
    kubernetes {
      inheritFrom 'jenkins-node-rx-snap'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-node-rx-snap-0
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins-node-rx-snap
spec:
  containers:
    - name: compiler
      image: etendo/compiler_jenkins:1.0.7
      ports:
        - name: ssh
          containerPort: 22
          protocol: TCP
        - name: visualvm
          containerPort: 8000
          protocol: TCP
      resources:
        limits:
          cpu: 3072m
          memory: 5000Mi
        requests:
          cpu: 3072m
          memory: 5000Mi
      volumeMounts:
        - name: rsa-keys
          mountPath: /root/.ssh/
        - name: docker-sock
          mountPath: /var/run/docker.sock
      lifecycle:
        postStart:
          exec:
            command:
              - bash
              - '-c'
              - >-
                chmod a+x /var/run/docker.sock && rm
                /etc/apt/sources.list.d/pgdg.list || echo 0 && apt update && apt
                install -y curl
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: IfNotPresent
    - name: postgres
      image: postgres:14
      workingDir: /home/jenkins
      env:
        - name: POSTGRES_PASSWORD
          value: syspass
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: IfNotPresent
  volumes:
    - name: rsa-keys
      configMap:
        name: rsa-keys
        defaultMode: 384
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  dnsPolicy: ClusterFirst
  serviceAccountName: default
  serviceAccount: default
  securityContext:
    privileged: true

"""
        }
    }

  stages {
    stage ('Build Environment Etendo Classic') {
      when {
        expression {
          return env.BRANCH_NAME == 'develop'
        }
      }
      steps {
        container('compiler') {
          script {
            try {
              echo "--------------- Building Classic environment --------------"
              // Clone Etendo Core
              sh """
              git clone --branch develop $ETENDO_BASE_URL etendo_core
              """

              echo "---------------- Prepare gradle.properties ----------------"
              sh """
              cd etendo_core
              echo -e \"\n
              context.name=${CONTEXT_NAME}\n
              bbdd.sid=${BBDD_SID}\n
              bbdd.port=${BBDD_PORT}\n
              bbdd.systemUser=${BBDD_SYSTEMUSER}\n
              bbdd.systemPassword=${BBDD_SYSTEMPASS}\n
              bbdd.user=${BBDD_USER}\n
              bbdd.password=${BBDD_PASSWORD}\n
              nexusUser=${NEXUS_USER}\n
              nexusPassword=${NEXUS_PASSWORD}\n
              githubUser=${GITHUB_USER}\n
              githubToken=${GITHUB_TOKEN}\n
              allow.root=true\n
              org.gradle.jvmargs=-Dfile.encoding=UTF-8\" > gradle.properties
              export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
              """

              echo "---------------- Clone modules of Classic ---------------"
              withCredentials([sshUserPrivateKey(credentialsId: 'my-credentials', keyFileVariable: 'keyfile')]) {
                sh """
                cd etendo_core
                mkdir -p modules
                cd modules
                # Clone module etendo_rx
                GIT_SSH_COMMAND=\"ssh -i ${keyfile} -o \"UserKnownHostsFile=/dev/null\" -o \"StrictHostKeyChecking=no\"\" git clone --branch ${env.BRANCH_NAME} $MODULE_RX_URL
                """
              }

              echo "--------------------- Compile Classic ---------------------"
              def buildGradleContent = """
                dependencies {
                    implementation(\"com.etendoerp.platform:etendo-core:latest.release\")
                }
              """

              sh """
              cd etendo_core
              echo '${buildGradleContent}' >> build.gradle
              cat build.gradle
              ./gradlew clean --info
              ./gradlew prepareConfig --info
              ./gradlew setup --info
              ./gradlew install --info
              """

              echo "------------ Build Classic environment Succesful ----------"
              currentBuild.result = SUCCESS
            } catch (Exception e) {
              echo "------------- Build Classic environment Failed ------------"
              echo "Exception occurred: " + e.toString()
              currentBuild.result = FAILED
              error('Build Classic Failed')
            }
          }
        }
      }
    }

    stage ('Build Environment Etendo RX') {
      when {
        allOf {
          expression {
            return currentBuild.result == SUCCESS && env.BRANCH_NAME == 'develop'
          }
        }
      }
      steps {
        container('compiler') {
          script {
            try {
              echo "----------------- Building RX environment -----------------"
              sh """
              git clone --branch $BRANCH_NAME $ETENDO_RX_URL
              """

              echo "---------------- Prepare gradle.properties ----------------"
              sh """
              cd etendo_rx
              echo -e \"\n
              repositoryUser=${NEXUS_USER}\n
              repositoryPassword=${NEXUS_PASSWORD}\n
              repositoryUrl=${REPOSITORY_URL}\n
              githubUser=${GITHUB_USER}\n
              githubToken=${GITHUB_TOKEN}\n
              org.gradle.parallel=true\n
              org.gradle.daemon=false\n
              dasPushImage=\n
              authPushImage=\n
              edgePushImage=\n
              zapierIntegrationPushImage=\n
              asyncPushImage=\n
              pushUrl=\n
              pushUsername=\n
              pushPassword=\n
              bbdd.rdbms=POSTGRE\n
              bbdd.driver=org.postgresql.Driver\n
              bbdd.url=jdbc:postgresql://localhost:5432\n
              bbdd.sid=${BBDD_SID}\n
              bbdd.systemUser=${BBDD_SYSTEMUSER}\n
              bbdd.systemPassword=${BBDD_SYSTEMPASS}\n
              bbdd.user=${BBDD_USER}\n
              bbdd.password=${BBDD_PASSWORD}\n
              bbdd.sessionConfig=select update_dateFormat('DD-MM-YYYY')\n
              rx.generateCode=true\n
              rx.computedColumns=true\n
              rx.views=true\n
              exclude.entities.jar=true\n
              \" > gradle.properties
              export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
              """

              echo "---------------- Change version to snapshot ---------------"
              sh """
              cd etendo_rx
              sed -i \"s/gradle.ext.version = \\(.*\\)\'/gradle.ext.version = \\1-SNAPSHOT\'/g\" settings.gradle
              """

              echo "-------------------- Generate entities --------------------"
              sh """
              cd etendo_rx
              ./gradlew generate.entities --info
              """

              echo "-------------- Build RX environment Succesful -------------"
              currentBuild.result = SUCCESS
            } catch (Exception e) {
              echo "--------------- Build RX environment Failed ---------------"
              echo "Exception occurred: " + e.toString()
              currentBuild.result = FAILED
              error('Build RX Failed')
            }
          }
        }
      }
    }

    stage ("Publish JARs") {
      when {
        allOf {
           expression {
            return currentBuild.result == SUCCESS && env.BRANCH_NAME == 'develop'
          }
        }
      }
      steps {
        container('compiler') {
          script {
            try {
              echo "----------------- Publishing Snapshot JARs ----------------"
              sh """
              export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
              cd etendo_rx
              ./gradlew publish --info
              """
              echo "----------------- Snapshot JARs Published -----------------"
              currentBuild.result = SUCCESS
            } catch (Exception e) {
              echo "----------- Publication of Snapshot JARs Failed -----------"
              echo "Exception occurred: " + e.toString()
              currentBuild.result = FAILED
            }
          }
        }
      }
    }
  }

  post {
    fixed {
      mail to: EMAIL_ADDRESS,
      subject: "✅ FIXED - ${currentBuild.fullDisplayName}",
      body: """
${new Date()}
__________________________________________________________

✅ ERRORS FIXED ✅

Commit: ${ETENDO_RX_URL}/commit/${env.GIT_COMMIT}
Author: ${COMMIT_AUTHOR_NAME} <${COMMIT_AUTHOR_EMAIL}>

The problems found in the previous run/s have been fixed! 💪
Check out the output in the following link:
${env.BUILD_URL}
__________________________________________________________
        """
    }
    failure {
      cleanWs deleteDirs: true
      mail to: EMAIL_ADDRESS,
      subject: "⛔ ERROR - ${currentBuild.fullDisplayName}",
      body:  """
${new Date()}
__________________________________________________________

⛔ ERROR ⛔

Commit: ${ETENDO_RX_URL}/commit/${env.GIT_COMMIT}
Author: ${COMMIT_AUTHOR_NAME} <${COMMIT_AUTHOR_EMAIL}>

The build or publication has failed unexpectedly.
💡 This build was on an Etendo environment.
To more information on the failing run visit:
${env.BUILD_URL}
__________________________________________________________
      """
    }
  }
}
